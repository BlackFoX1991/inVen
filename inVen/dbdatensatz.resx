<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="importCon.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>